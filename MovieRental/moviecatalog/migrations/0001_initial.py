# Generated by Django 4.1.5 on 2023-01-22 21:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('genre_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('number_in_stocks', models.IntegerField()),
            ],
            options={
                'db_table': 'genre',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('movie_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=120)),
                ('genre_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='moviecatalog.genre')),
            ],
            options={
                'db_table': 'movie',
            },
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('rental_id', models.AutoField(primary_key=True, serialize=False)),
                ('rental_date', models.DateTimeField()),
                ('date_returned', models.DateTimeField(auto_now_add=True, null=True)),
                ('daily_rental_fee', models.FloatField()),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='moviecatalog.customer')),
                ('movie_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='moviecatalog.movie')),
            ],
            options={
                'db_table': 'rental',
                'unique_together': {('movie_id', 'customer_id')},
            },
        ),
    ]
